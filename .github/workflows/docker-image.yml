name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag myprogram:latest
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Tag the Docker image
      run: docker tag myprogram:latest ${{ secrets.DOCKER_USERNAME }}/myprogram:latest
    - name: Push the Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/myprogram:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      run: |
        sudo apt-get update
        sudo apt-get install -y kubectl

    - name: Set up kubeconfig
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config 

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f myprogram-deployment.yaml --validate=false
    
    - name: Execute Python script
      run: |
          kubectl exec $(kubectl get pods -l app=myprogram -o jsonpath="{.items[0].metadata.name}") -- python myprogram.py -u "https://www.google.com" -o json
    
    - name: Get pod logs
      run: |
          kubectl get deployment myprogram-deployment
          kubectl logs -l app=myprogram

    - name: Extract and sanitize domains using awk
      run: |
        awk '{gsub(/^https?:\/\//, ""); gsub(/^www\./, ""); gsub(/[[:punct:]]+$/, ""); print tolower($0)}' file.txt | sort -u > sanitized_domains_awk.txt

    - name: Extract and sanitize domains using sed
      run: |
        sed -E 's|https?://||; s|www\.||; s|\.| |g; s|[[:punct:]]*$||' file.txt | tr '[:upper:]' '[:lower:]' | sort -u > sanitized_domains_sed.txt

    - name: Display sanitized domains from awk
      run: |
        echo "Sanitized Domains (from awk):"
        cat sanitized_domains_awk.txt

    - name: Display sanitized domains from sed
      run: |
        echo "Sanitized Domains (from sed):"
        cat sanitized_domains_sed.txt
